version: "3.9"
services: 
  redis:  
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports: 
      - '6379:6379' 
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./docker_volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - ./docker-volumes/data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql:latest
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_USER: jobber
      - MYSQL_DATABASE: JB_DB
      - MYSQL_ROOT_PASSWORD: '0002'
      - MYSQL_PASSWORD: '0002'
    ports:
      - '3306:3306'
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - POSTGRES_USER: jobber
      - POSTGRES_DB: JB_DB_REVIEW
      - POSTGRES_PASSWORD: '0002'
    ports:
      - '5432:5432'
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13.4-management-alpine
    restart: always
    ports:
      # Advanced Message Queuing Protocol port
      - '5672:5672'
      # UI ports
      - '15672:15672'
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    restart: always
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      bootstrap.memory_lock: 'true'
      discovery.type: single-node
      xpack.security.enabled: 'false'
      xpack.security.authc.api_key.enabled: 'true'
      xpack.monitoring.collection.enabled: 'true'
      xpack.security.enrollment.enabled: 'true'
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes: 
      - ./docker-volumes/elasticsearch:/usr/share/elasticsearch/data
    network:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.14.3
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS: ["http://elasticsearch_container:9200"]
    ports:
      - '5601:5601'
    network:
      - elastic
    volumes:
    - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
    - elasticsearch 
      
network:
  elastic:
    name: elastic

       